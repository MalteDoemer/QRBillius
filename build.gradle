plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
}

group 'qrbillius'
version '1.1.0'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.1'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}


application {
  mainModule = 'qrbillius'
  mainClass = 'qrbillius.Launcher'
  applicationDefaultJvmArgs = ['-Dfile.encoding=UTF-8']
}

javafx {
  version = '19'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  implementation('net.codecrete.qrbill:qrbill-generator:3.0.6')
  implementation('org.apache.commons:commons-io:1.3.2')
  implementation('org.apache.commons:commons-csv:1.9.0')

  implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
  implementation('org.kordamp.ikonli:ikonli-fontawesome-pack:12.3.1')

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
  useJUnitPlatform()  }

jlink {
  imageZip = project.file("${buildDir}/distributions/${applicationName}-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    noConsole = true
  }
  jpackage {
    imageName = 'QRBillius'
    installerName = 'QRBillius'

    def currentOs = org.gradle.internal.os.OperatingSystem.current()
    def icon = currentOs.windows ? 'qrbillius.ico' : 'qrbillius-16x16.png'

    imageOptions += ['--icon', "src/main/resources/qrbillius/icons/$icon"]
    installerOptions += ['--icon', "src/main/resources/qrbillius/icons/$icon"]

    if (currentOs.windows) {
      installerOptions += ['--win-dir-chooser', '--win-menu']
    }
  }
}